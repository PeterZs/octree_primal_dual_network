name: "prop_known_levels_3_iters_1_1_1"
layer {
  name: "input_datacost"
  type: "OctInput"
  top: "datacost"
  oct_input_param {
    batch_size: 1
    source: "/home/xiaojwan/thesis/experiment/octree_primal_dual/run_suncg/test_datacost_oct.txt"
    num_classes: 38
    preload_data: false
  }
}
layer {
  name: "input_gt"
  type: "OctSingleChannelInput"
  top: "gt"
  oct_input_param {
    batch_size: 1
    source: "/home/xiaojwan/thesis/experiment/octree_primal_dual/run_suncg/test_groundtruth_oct.txt"
    preload_data: false
  }
}
layer {
  name: "init_variable"
  type: "OctInputPrimalDual"
  top: "u"
  top: "u_"
  top: "m"
  top: "l"
  top: "num"
  top: "nbh"
  top: "nbh_of"
  oct_input_primal_dual_param {
    batch_size: 1
    num_classes: 38
    height: 32
    width: 32
    depth: 32
    nbh_size: 3
  }
}
layer {
  name: "datacost_lam"
  type: "Scaling"
  bottom: "datacost"
  top: "datacost_lam"
  scaling_param {
    scale: 1.0
  }
}
layer {
  name: "datacost_prep0"
  type: "OctLevelSampling"
  bottom: "datacost_lam"
  bottom: "u"
  top: "datacost_prep0"
  oct_level_sampling_param {
    input_key_layer: "input_datacost"
    ref_key_layer: "init_variable"
    input_max_level: 7
  }
}
layer {
  name: "conv0_l0"
  type: "OctConv"
  bottom: "datacost_prep0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv0_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv0_l0_relu"
  type: "ReLU"
  bottom: "conv0_l0"
  top: "conv0_l0"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv1_l0"
  type: "OctConv"
  bottom: "conv0_l0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv1_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_l0_relu"
  type: "ReLU"
  bottom: "conv1_l0"
  top: "conv1_l0"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv2_l0"
  type: "OctConv"
  bottom: "conv1_l0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv2_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "datacost_adding0"
  type: "Eltwise"
  bottom: "datacost_prep0"
  bottom: "conv2_l0"
  top: "datacost_adding0"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "dual_update_0_0"
  type: "OctDualUpdate"
  bottom: "m"
  bottom: "u_"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "m_0_0"
  param {
    name: "primal_dual_weight0"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_dual_update_param {
    filter_size: 3
    output_channels: 114
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    sigma: 0.20000000298
  }
}
layer {
  name: "lagrangian_update_0_0"
  type: "OctLagrangianUpdate"
  bottom: "l"
  bottom: "u_"
  top: "l_0_0"
  lagrangian_update_param {
    sigma: 0.20000000298
  }
}
layer {
  name: "primal_update_0_0"
  type: "OctPrimalUpdate"
  bottom: "u"
  bottom: "m_0_0"
  bottom: "l_0_0"
  bottom: "datacost_adding0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "u_0_0"
  param {
    name: "primal_dual_weight0"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_primal_update_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    tau: 0.20000000298
  }
}
layer {
  name: "primal_further_update_0_0"
  type: "OctPrimalFurtherUpdate"
  bottom: "u_0_0"
  bottom: "u"
  top: "u_0_0_"
}
layer {
  name: "conv3_l0"
  type: "OctConv"
  bottom: "u_0_0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv3_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_l0_relu"
  type: "ReLU"
  bottom: "conv3_l0"
  top: "conv3_l0"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv4_l0"
  type: "OctConv"
  bottom: "conv3_l0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv4_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_l0_relu"
  type: "ReLU"
  bottom: "conv4_l0"
  top: "conv4_l0"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv5_l0"
  type: "OctConv"
  bottom: "conv4_l0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "conv5_l0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "u_scaling0"
  type: "Scaling"
  bottom: "u_0_0"
  top: "u_scaling0"
  scaling_param {
    scale: 10.0
  }
}
layer {
  name: "u_adding0"
  type: "Eltwise"
  bottom: "u_scaling0"
  bottom: "conv5_l0"
  top: "u_adding0"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "seg_prob0"
  type: "Softmax"
  bottom: "u_adding0"
  top: "seg_prob0"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "prop_prob0"
  type: "OctConv"
  bottom: "seg_prob0"
  bottom: "num"
  bottom: "nbh"
  bottom: "nbh_of"
  top: "prop_prob0"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 1
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "prop_prob0_sig"
  type: "Sigmoid"
  bottom: "prop_prob0"
  top: "prop_prob0_sig"
  sigmoid_param {
    engine: CAFFE
  }
}
layer {
  name: "prop0"
  type: "OctProp"
  bottom: "u_0_0"
  bottom: "u_0_0_"
  bottom: "m_0_0"
  bottom: "l_0_0"
  bottom: "prop_prob0_sig"
  top: "u_prop0"
  top: "u_prop0_"
  top: "m_prop0"
  top: "l_prop0"
  oct_prop_param {
    key_layer: "init_variable"
    prop_mode: PROP_PRED
  }
}
layer {
  name: "up_sampling0"
  type: "OctUpSampling"
  bottom: "u_prop0"
  bottom: "u_prop0_"
  bottom: "m_prop0"
  bottom: "l_prop0"
  top: "u_upsampling0"
  top: "u_upsampling0_"
  top: "m_upsampling0"
  top: "l_upsampling0"
  top: "num_upsampling0"
  top: "nbh_upsampling0"
  top: "nbh_of_upsampling0"
  oct_upsampling_param {
    key_layer: "prop0"
    nbh_size: 3
  }
}
layer {
  name: "datacost_prep1"
  type: "OctLevelSampling"
  bottom: "datacost_lam"
  bottom: "u_upsampling0"
  top: "datacost_prep1"
  oct_level_sampling_param {
    input_key_layer: "input_datacost"
    ref_key_layer: "up_sampling0"
    input_max_level: 7
  }
}
layer {
  name: "conv0_l1"
  type: "OctConv"
  bottom: "datacost_prep1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv0_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv0_l1_relu"
  type: "ReLU"
  bottom: "conv0_l1"
  top: "conv0_l1"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv1_l1"
  type: "OctConv"
  bottom: "conv0_l1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv1_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_l1_relu"
  type: "ReLU"
  bottom: "conv1_l1"
  top: "conv1_l1"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv2_l1"
  type: "OctConv"
  bottom: "conv1_l1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv2_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "datacost_adding1"
  type: "Eltwise"
  bottom: "datacost_prep1"
  bottom: "conv2_l1"
  top: "datacost_adding1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "dual_update_1_0"
  type: "OctDualUpdate"
  bottom: "m_upsampling0"
  bottom: "u_upsampling0_"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "m_1_0"
  param {
    name: "primal_dual_weight1"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_dual_update_param {
    filter_size: 3
    output_channels: 114
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    sigma: 0.20000000298
  }
}
layer {
  name: "lagrangian_update_1_0"
  type: "OctLagrangianUpdate"
  bottom: "l_upsampling0"
  bottom: "u_upsampling0_"
  top: "l_1_0"
  lagrangian_update_param {
    sigma: 0.20000000298
  }
}
layer {
  name: "primal_update_1_0"
  type: "OctPrimalUpdate"
  bottom: "u_upsampling0"
  bottom: "m_1_0"
  bottom: "l_1_0"
  bottom: "datacost_adding1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "u_1_0"
  param {
    name: "primal_dual_weight1"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_primal_update_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    tau: 0.20000000298
  }
}
layer {
  name: "primal_further_update_1_0"
  type: "OctPrimalFurtherUpdate"
  bottom: "u_1_0"
  bottom: "u_upsampling0"
  top: "u_1_0_"
}
layer {
  name: "conv3_l1"
  type: "OctConv"
  bottom: "u_1_0"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv3_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_l1_relu"
  type: "ReLU"
  bottom: "conv3_l1"
  top: "conv3_l1"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv4_l1"
  type: "OctConv"
  bottom: "conv3_l1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv4_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_l1_relu"
  type: "ReLU"
  bottom: "conv4_l1"
  top: "conv4_l1"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv5_l1"
  type: "OctConv"
  bottom: "conv4_l1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "conv5_l1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "u_scaling1"
  type: "Scaling"
  bottom: "u_1_0"
  top: "u_scaling1"
  scaling_param {
    scale: 10.0
  }
}
layer {
  name: "u_adding1"
  type: "Eltwise"
  bottom: "u_scaling1"
  bottom: "conv5_l1"
  top: "u_adding1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "seg_prob1"
  type: "Softmax"
  bottom: "u_adding1"
  top: "seg_prob1"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "prop_prob1"
  type: "OctConv"
  bottom: "seg_prob1"
  bottom: "num_upsampling0"
  bottom: "nbh_upsampling0"
  bottom: "nbh_of_upsampling0"
  top: "prop_prob1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 1
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "prop_prob1_sig"
  type: "Sigmoid"
  bottom: "prop_prob1"
  top: "prop_prob1_sig"
  sigmoid_param {
    engine: CAFFE
  }
}
layer {
  name: "prop1"
  type: "OctProp"
  bottom: "u_1_0"
  bottom: "u_1_0_"
  bottom: "m_1_0"
  bottom: "l_1_0"
  bottom: "prop_prob1_sig"
  top: "u_prop1"
  top: "u_prop1_"
  top: "m_prop1"
  top: "l_prop1"
  oct_prop_param {
    key_layer: "up_sampling0"
    prop_mode: PROP_PRED
  }
}
layer {
  name: "up_sampling1"
  type: "OctUpSampling"
  bottom: "u_prop1"
  bottom: "u_prop1_"
  bottom: "m_prop1"
  bottom: "l_prop1"
  top: "u_upsampling1"
  top: "u_upsampling1_"
  top: "m_upsampling1"
  top: "l_upsampling1"
  top: "num_upsampling1"
  top: "nbh_upsampling1"
  top: "nbh_of_upsampling1"
  oct_upsampling_param {
    key_layer: "prop1"
    nbh_size: 3
  }
}
layer {
  name: "datacost_prep2"
  type: "OctLevelSampling"
  bottom: "datacost_lam"
  bottom: "u_upsampling1"
  top: "datacost_prep2"
  oct_level_sampling_param {
    input_key_layer: "input_datacost"
    ref_key_layer: "up_sampling1"
    input_max_level: 7
  }
}
layer {
  name: "conv0_l2"
  type: "OctConv"
  bottom: "datacost_prep2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv0_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv0_l2_relu"
  type: "ReLU"
  bottom: "conv0_l2"
  top: "conv0_l2"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv1_l2"
  type: "OctConv"
  bottom: "conv0_l2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv1_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_l2_relu"
  type: "ReLU"
  bottom: "conv1_l2"
  top: "conv1_l2"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv2_l2"
  type: "OctConv"
  bottom: "conv1_l2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv2_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.00999999977648
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "datacost_adding2"
  type: "Eltwise"
  bottom: "datacost_prep2"
  bottom: "conv2_l2"
  top: "datacost_adding2"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "dual_update_2_0"
  type: "OctDualUpdate"
  bottom: "m_upsampling1"
  bottom: "u_upsampling1_"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "m_2_0"
  param {
    name: "primal_dual_weight2"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_dual_update_param {
    filter_size: 3
    output_channels: 114
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    sigma: 0.20000000298
  }
}
layer {
  name: "lagrangian_update_2_0"
  type: "OctLagrangianUpdate"
  bottom: "l_upsampling1"
  bottom: "u_upsampling1_"
  top: "l_2_0"
  lagrangian_update_param {
    sigma: 0.20000000298
  }
}
layer {
  name: "primal_update_2_0"
  type: "OctPrimalUpdate"
  bottom: "u_upsampling1"
  bottom: "m_2_0"
  bottom: "l_2_0"
  bottom: "datacost_adding2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "u_2_0"
  param {
    name: "primal_dual_weight2"
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_primal_update_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    tau: 0.20000000298
  }
}
layer {
  name: "conv3_l2"
  type: "OctConv"
  bottom: "u_2_0"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv3_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_l2_relu"
  type: "ReLU"
  bottom: "conv3_l2"
  top: "conv3_l2"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv4_l2"
  type: "OctConv"
  bottom: "conv3_l2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv4_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_l2_relu"
  type: "ReLU"
  bottom: "conv4_l2"
  top: "conv4_l2"
  relu_param {
    engine: CAFFE
  }
}
layer {
  name: "conv5_l2"
  type: "OctConv"
  bottom: "conv4_l2"
  bottom: "num_upsampling1"
  bottom: "nbh_upsampling1"
  bottom: "nbh_of_upsampling1"
  top: "conv5_l2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  oct_conv_param {
    filter_size: 3
    output_channels: 38
    weight_filler {
      type: "gaussian"
      std: 0.10000000149
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "u_scaling2"
  type: "Scaling"
  bottom: "u_2_0"
  top: "u_scaling2"
  scaling_param {
    scale: 10.0
  }
}
layer {
  name: "u_adding2"
  type: "Eltwise"
  bottom: "u_scaling2"
  bottom: "conv5_l2"
  top: "u_adding2"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "seg_prob2"
  type: "Softmax"
  bottom: "u_adding2"
  top: "seg_prob2"
  softmax_param {
    axis: 1
  }
}
layer {
  name: "output_pred"
  type: "OctOutput"
  bottom: "seg_prob0"
  bottom: "prop_prob0_sig"
  bottom: "seg_prob1"
  bottom: "prop_prob1_sig"
  bottom: "seg_prob2"
  top: "pred"
  oct_output_param {
    key_layer: "init_variable"
    key_layer: "up_sampling0"
    key_layer: "up_sampling1"
    min_level: 5
    prop_mode: PROP_PRED
  }
}
layer {
  name: "accuracy"
  type: "OctSegAccuracy"
  bottom: "gt"
  bottom: "pred"
  top: "freespace_accuracy"
  top: "semantic_accuracy"
  top: "overall_accuracy"
  oct_accuracy_3dreconstruction_param {
    freespace_label: 37
    unknown_label: 36
    gt_key_layer: "input_gt"
    pr_key_layer: "output_pred"
    max_level: 7
    ignore_label: 35
  }
}
